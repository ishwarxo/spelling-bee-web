{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\ishwar\\\\spelling-bee-web\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LetterGrid from './components/LetterGrid';\nimport InputForm from './components/InputForm';\nimport Results from './components/Results';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState('');\n  const handleSubmit = async (letters, centralLetter) => {\n    try {\n      const response = await fetch('http://localhost:5000/solve', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          letters,\n          centralLetter\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        setError(data.error);\n        setResults(null);\n      } else {\n        setResults(data);\n        setError('');\n      }\n    } catch (err) {\n      setError('Error connecting to the server.');\n      setResults(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex flex-col items-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-6 text-blue-600\",\n      children: \"Spelling Bee Solver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mt-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), results && /*#__PURE__*/_jsxDEV(Results, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8LQPsct2fmFmogWzYqYKSiHyWeY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","LetterGrid","InputForm","Results","jsxDEV","_jsxDEV","App","_s","results","setResults","error","setError","handleSubmit","letters","centralLetter","response","fetch","method","headers","body","JSON","stringify","data","json","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["D:/Projects/ishwar/spelling-bee-web/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport LetterGrid from './components/LetterGrid';\r\nimport InputForm from './components/InputForm';\r\nimport Results from './components/Results';\r\nimport './styles.css';\r\n\r\nfunction App() {\r\n  const [results, setResults] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (letters, centralLetter) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/solve', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ letters, centralLetter })\r\n      });\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        setError(data.error);\r\n        setResults(null);\r\n      } else {\r\n        setResults(data);\r\n        setError('');\r\n      }\r\n    } catch (err) {\r\n      setError('Error connecting to the server.');\r\n      setResults(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex flex-col items-center p-4\">\r\n      <h1 className=\"text-4xl font-bold mb-6 text-blue-600\">Spelling Bee Solver</h1>\r\n      <InputForm onSubmit={handleSubmit} />\r\n      {error && <p className=\"text-red-500 mt-4\">{error}</p>}\r\n      {results && <Results results={results} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,YAAY,GAAG,MAAAA,CAAOC,OAAO,EAAEC,aAAa,KAAK;IACrD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,OAAO;UAAEC;QAAc,CAAC;MACjD,CAAC,CAAC;MACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACZ,KAAK,EAAE;QACdC,QAAQ,CAACW,IAAI,CAACZ,KAAK,CAAC;QACpBD,UAAU,CAAC,IAAI,CAAC;MAClB,CAAC,MAAM;QACLA,UAAU,CAACa,IAAI,CAAC;QAChBX,QAAQ,CAAC,EAAE,CAAC;MACd;IACF,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZb,QAAQ,CAAC,iCAAiC,CAAC;MAC3CF,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKoB,SAAS,EAAC,yDAAyD;IAAAC,QAAA,gBACtErB,OAAA;MAAIoB,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9EzB,OAAA,CAACH,SAAS;MAAC6B,QAAQ,EAAEnB;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACpCpB,KAAK,iBAAIL,OAAA;MAAGoB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAEhB;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrDtB,OAAO,iBAAIH,OAAA,CAACF,OAAO;MAACK,OAAO,EAAEA;IAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV;AAACvB,EAAA,CAjCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}